{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Welcome to Aiven Operator for Kubernetes","text":"<p>Provision and manage Aiven services from your Kubernetes cluster.</p>"},{"location":"index.html#what-is-aiven","title":"What is Aiven?","text":"<p>Aiven offers managed services for the best open source data technologies, on a cloud of your choice.</p> <p>We offer multiple cloud options because we believe that everyone should have access to great data platforms wherever they host their applications. Our customers tell us they love it because they know that they aren\u2019t locked in to one particular cloud platform for all their data needs.</p>"},{"location":"index.html#contributing","title":"Contributing","text":"<p>The contribution guide covers everything you need to know about how you can contribute to Aiven Operator for Kubernetes. The developer guide will help you onboard as a developer.</p>"},{"location":"api-reference.html","title":"API Reference","text":""},{"location":"api-reference.html#aiveniov1alpha1","title":"aiven.io/v1alpha1","text":""},{"location":"api-reference.html#authsecretreference","title":"AuthSecretReference","text":"<p>AuthSecretReference references a Secret containing an Aiven authentication token  </p> Field Description <code>name</code> string N/A <code>key</code> string N/A"},{"location":"api-reference.html#cassandra","title":"Cassandra","text":"<p>Cassandra is the Schema for the cassandras API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> CassandraSpec N/A <code>status</code> ServiceStatus N/A"},{"location":"api-reference.html#cassandraspec","title":"CassandraSpec","text":"<p>CassandraSpec defines the desired state of Cassandra  </p> Field Description <code>ServiceCommonSpec</code> ServiceCommonSpec (Members of <code>ServiceCommonSpec</code>are embedded into this type.) <code>disk_space</code> string The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service re-balancing. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>userConfig</code> github.com/aiven/aiven-operator/api/v1alpha1/userconfigs/cassandra.CassandraUserConfig Cassandra specific user configuration options"},{"location":"api-reference.html#clickhouse","title":"Clickhouse","text":"<p>Clickhouse is the Schema for the clickhouses API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> ClickhouseSpec N/A <code>status</code> ServiceStatus N/A"},{"location":"api-reference.html#clickhousespec","title":"ClickhouseSpec","text":"<p>ClickhouseSpec defines the desired state of Clickhouse  </p> Field Description <code>ServiceCommonSpec</code> ServiceCommonSpec (Members of <code>ServiceCommonSpec</code>are embedded into this type.) <code>disk_space</code> string The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service re-balancing. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>userConfig</code> github.com/aiven/aiven-operator/api/v1alpha1/userconfigs/clickhouse.ClickhouseUserConfig OpenSearch specific user configuration options"},{"location":"api-reference.html#clickhouseuser","title":"ClickhouseUser","text":"<p>ClickhouseUser is the Schema for the clickhouseusers API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> ClickhouseUserSpec N/A <code>status</code> ClickhouseUserStatus N/A"},{"location":"api-reference.html#clickhouseuserspec","title":"ClickhouseUserSpec","text":"<p>ClickhouseUserSpec defines the desired state of ClickhouseUser  </p> Field Description <code>project</code> string Project to link the user to <code>serviceName</code> string Service to link the user to <code>authentication</code> string Authentication details <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret"},{"location":"api-reference.html#clickhouseuserstatus","title":"ClickhouseUserStatus","text":"<p>ClickhouseUserStatus defines the observed state of ClickhouseUser  </p> Field Description <code>uuid</code> string Clickhouse user UUID <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an ClickhouseUser state"},{"location":"api-reference.html#conninfosecrettarget","title":"ConnInfoSecretTarget","text":"<p>ConnInfoSecretTarget contains information secret name  </p> Field Description <code>name</code> string Name of the Secret resource to be created"},{"location":"api-reference.html#connectionpool","title":"ConnectionPool","text":"<p>ConnectionPool is the Schema for the connectionpools API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> ConnectionPoolSpec N/A <code>status</code> ConnectionPoolStatus N/A"},{"location":"api-reference.html#connectionpoolspec","title":"ConnectionPoolSpec","text":"<p>ConnectionPoolSpec defines the desired state of ConnectionPool  </p> Field Description <code>project</code> string Target project. <code>serviceName</code> string Service name. <code>databaseName</code> string Name of the database the pool connects to <code>username</code> string Name of the service user used to connect to the database <code>poolSize</code> int Number of connections the pool may create towards the backend server <code>poolMode</code> string Mode the pool operates in (session, transaction, statement) <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret"},{"location":"api-reference.html#connectionpoolstatus","title":"ConnectionPoolStatus","text":"<p>ConnectionPoolStatus defines the observed state of ConnectionPool  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an ConnectionPool state"},{"location":"api-reference.html#database","title":"Database","text":"<p>Database is the Schema for the databases API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> DatabaseSpec N/A <code>status</code> DatabaseStatus N/A"},{"location":"api-reference.html#databasespec","title":"DatabaseSpec","text":"<p>DatabaseSpec defines the desired state of Database  </p> Field Description <code>project</code> string Project to link the database to <code>serviceName</code> string PostgreSQL service to link the database to <code>lcCollate</code> string Default string sort order (LC_COLLATE) of the database. Default value: en_US.UTF-8 <code>lcCtype</code> string Default character classification (LC_CTYPE) of the database. Default value: en_US.UTF-8 <code>terminationProtection</code> bool It is a Kubernetes side deletion protections, which prevents the databasefrom being deleted by Kubernetes. It is recommended to enable this for any production databases containing critical data. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret"},{"location":"api-reference.html#databasestatus","title":"DatabaseStatus","text":"<p>DatabaseStatus defines the observed state of Database  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an Database state"},{"location":"api-reference.html#grafana","title":"Grafana","text":"<p>Grafana is the Schema for the grafanas API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> GrafanaSpec N/A <code>status</code> ServiceStatus N/A"},{"location":"api-reference.html#grafanaspec","title":"GrafanaSpec","text":"<p>GrafanaSpec defines the desired state of Grafana  </p> Field Description <code>ServiceCommonSpec</code> ServiceCommonSpec (Members of <code>ServiceCommonSpec</code>are embedded into this type.) <code>disk_space</code> string The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service re-balancing. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>userConfig</code> github.com/aiven/aiven-operator/api/v1alpha1/userconfigs/grafana.GrafanaUserConfig Cassandra specific user configuration options"},{"location":"api-reference.html#kafka","title":"Kafka","text":"<p>Kafka is the Schema for the kafkas API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> KafkaSpec N/A <code>status</code> ServiceStatus N/A"},{"location":"api-reference.html#kafkaacl","title":"KafkaACL","text":"<p>KafkaACL is the Schema for the kafkaacls API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> KafkaACLSpec N/A <code>status</code> KafkaACLStatus N/A"},{"location":"api-reference.html#kafkaaclspec","title":"KafkaACLSpec","text":"<p>KafkaACLSpec defines the desired state of KafkaACL  </p> Field Description <code>project</code> string Project to link the Kafka ACL to <code>serviceName</code> string Service to link the Kafka ACL to <code>permission</code> string Kafka permission to grant (admin, read, readwrite, write) <code>topic</code> string Topic name pattern for the ACL entry <code>username</code> string Username pattern for the ACL entry <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret"},{"location":"api-reference.html#kafkaaclstatus","title":"KafkaACLStatus","text":"<p>KafkaACLStatus defines the observed state of KafkaACL  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an KafkaACL state <code>id</code> string Kafka ACL ID"},{"location":"api-reference.html#kafkaconnect","title":"KafkaConnect","text":"<p>KafkaConnect is the Schema for the kafkaconnects API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> KafkaConnectSpec N/A <code>status</code> ServiceStatus N/A"},{"location":"api-reference.html#kafkaconnectspec","title":"KafkaConnectSpec","text":"<p>KafkaConnectSpec defines the desired state of KafkaConnect  </p> Field Description <code>ServiceCommonSpec</code> ServiceCommonSpec (Members of <code>ServiceCommonSpec</code>are embedded into this type.) <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret <code>userConfig</code> github.com/aiven/aiven-operator/api/v1alpha1/userconfigs/kafka_connect.KafkaConnectUserConfig PostgreSQL specific user configuration options"},{"location":"api-reference.html#kafkaconnector","title":"KafkaConnector","text":"<p>KafkaConnector is the Schema for the kafkaconnectors API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> KafkaConnectorSpec N/A <code>status</code> KafkaConnectorStatus N/A"},{"location":"api-reference.html#kafkaconnectorpluginstatus","title":"KafkaConnectorPluginStatus","text":"<p>KafkaConnectorPluginStatus describes the observed state of a Kafka Connector Plugin  </p> Field Description <code>author</code> string N/A <code>class</code> string N/A <code>docUrl</code> string N/A <code>title</code> string N/A <code>type</code> string N/A <code>version</code> string N/A"},{"location":"api-reference.html#kafkaconnectorspec","title":"KafkaConnectorSpec","text":"<p>KafkaConnectorSpec defines the desired state of KafkaConnector  </p> Field Description <code>project</code> string Target project. <code>serviceName</code> string Service name. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret <code>connectorClass</code> string The Java class of the connector. <code>userConfig</code> map[string]string The connector specific configurationTo build config values from secret the template function <code>{{ fromSecret &amp;#34;name&amp;#34; &amp;#34;key&amp;#34; }}</code> is provided when interpreting the keys"},{"location":"api-reference.html#kafkaconnectorstatus","title":"KafkaConnectorStatus","text":"<p>KafkaConnectorStatus defines the observed state of KafkaConnector  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an kafka connector state <code>state</code> string Connector state <code>pluginStatus</code> KafkaConnectorPluginStatus PluginStatus contains metadata about the configured connector plugin <code>tasksStatus</code> KafkaConnectorTasksStatus TasksStatus contains metadata about the running tasks"},{"location":"api-reference.html#kafkaconnectortasksstatus","title":"KafkaConnectorTasksStatus","text":"<p>KafkaConnectorTasksStatus describes the observed state of the Kafka Connector Tasks  </p> Field Description <code>total</code> uint N/A <code>running</code> uint N/A <code>failed</code> uint N/A <code>paused</code> uint N/A <code>unassigned</code> uint N/A <code>unknown</code> uint N/A <code>stackTrace</code> string N/A"},{"location":"api-reference.html#kafkaschema","title":"KafkaSchema","text":"<p>KafkaSchema is the Schema for the kafkaschemas API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> KafkaSchemaSpec N/A <code>status</code> KafkaSchemaStatus N/A"},{"location":"api-reference.html#kafkaschemaspec","title":"KafkaSchemaSpec","text":"<p>KafkaSchemaSpec defines the desired state of KafkaSchema  </p> Field Description <code>project</code> string Project to link the Kafka Schema to <code>serviceName</code> string Service to link the Kafka Schema to <code>subjectName</code> string Kafka Schema Subject name <code>schema</code> string Kafka Schema configuration should be a valid Avro Schema JSON format <code>compatibilityLevel</code> string Kafka Schemas compatibility level <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret"},{"location":"api-reference.html#kafkaschemastatus","title":"KafkaSchemaStatus","text":"<p>KafkaSchemaStatus defines the observed state of KafkaSchema  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an KafkaSchema state <code>version</code> int Kafka Schema configuration version"},{"location":"api-reference.html#kafkaspec","title":"KafkaSpec","text":"<p>KafkaSpec defines the desired state of Kafka  </p> Field Description <code>ServiceCommonSpec</code> ServiceCommonSpec (Members of <code>ServiceCommonSpec</code>are embedded into this type.) <code>disk_space</code> string The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service re-balancing. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>karapace</code> bool Switch the service to use Karapace for schema registry and REST proxy <code>userConfig</code> github.com/aiven/aiven-operator/api/v1alpha1/userconfigs/kafka.KafkaUserConfig Kafka specific user configuration options"},{"location":"api-reference.html#kafkatopic","title":"KafkaTopic","text":"<p>KafkaTopic is the Schema for the kafkatopics API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> KafkaTopicSpec N/A <code>status</code> KafkaTopicStatus N/A"},{"location":"api-reference.html#kafkatopicconfig","title":"KafkaTopicConfig","text":"Field Description <code>cleanup_policy</code> string cleanup.policy value <code>compression_type</code> string compression.type value <code>delete_retention_ms</code> int64 delete.retention.ms value <code>file_delete_delay_ms</code> int64 file.delete.delay.ms value <code>flush_messages</code> int64 flush.messages value <code>flush_ms</code> int64 flush.ms value <code>index_interval_bytes</code> int64 index.interval.bytes value <code>max_compaction_lag_ms</code> int64 max.compaction.lag.ms value <code>max_message_bytes</code> int64 max.message.bytes value <code>message_downconversion_enable</code> bool message.downconversion.enable value <code>message_format_version</code> string message.format.version value <code>message_timestamp_difference_max_ms</code> int64 message.timestamp.difference.max.ms value <code>message_timestamp_type</code> string message.timestamp.type value <code>min_cleanable_dirty_ratio</code> float64 min.cleanable.dirty.ratio value <code>min_compaction_lag_ms</code> int64 min.compaction.lag.ms value <code>min_insync_replicas</code> int64 min.insync.replicas value <code>preallocate</code> bool preallocate value <code>retention_bytes</code> int64 retention.bytes value <code>retention_ms</code> int64 retention.ms value <code>segment_bytes</code> int64 segment.bytes value <code>segment_index_bytes</code> int64 segment.index.bytes value <code>segment_jitter_ms</code> int64 segment.jitter.ms value <code>segment_ms</code> int64 segment.ms value <code>unclean_leader_election_enable</code> bool unclean.leader.election.enable value"},{"location":"api-reference.html#kafkatopicspec","title":"KafkaTopicSpec","text":"<p>KafkaTopicSpec defines the desired state of KafkaTopic  </p> Field Description <code>project</code> string Target project. <code>serviceName</code> string Service name. <code>partitions</code> int Number of partitions to create in the topic <code>replication</code> int Replication factor for the topic <code>tags</code> []KafkaTopicTag Kafka topic tags <code>config</code> KafkaTopicConfig Kafka topic configuration <code>termination_protection</code> bool It is a Kubernetes side deletion protections, which prevents the kafka topicfrom being deleted by Kubernetes. It is recommended to enable this for any production databases containing critical data. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret"},{"location":"api-reference.html#kafkatopicstatus","title":"KafkaTopicStatus","text":"<p>KafkaTopicStatus defines the observed state of KafkaTopic  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an KafkaTopic state <code>state</code> string State represents the state of the kafka topic"},{"location":"api-reference.html#kafkatopictag","title":"KafkaTopicTag","text":"Field Description <code>key</code> string N/A <code>value</code> string N/A"},{"location":"api-reference.html#mysql","title":"MySQL","text":"<p>MySQL is the Schema for the mysqls API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> MySQLSpec N/A <code>status</code> ServiceStatus N/A"},{"location":"api-reference.html#mysqlspec","title":"MySQLSpec","text":"<p>MySQLSpec defines the desired state of MySQL  </p> Field Description <code>ServiceCommonSpec</code> ServiceCommonSpec (Members of <code>ServiceCommonSpec</code>are embedded into this type.) <code>disk_space</code> string The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service re-balancing. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>userConfig</code> github.com/aiven/aiven-operator/api/v1alpha1/userconfigs/mysql.MysqlUserConfig MySQL specific user configuration options"},{"location":"api-reference.html#opensearch","title":"OpenSearch","text":"<p>OpenSearch is the Schema for the opensearches API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> OpenSearchSpec N/A <code>status</code> ServiceStatus N/A"},{"location":"api-reference.html#opensearchspec","title":"OpenSearchSpec","text":"<p>OpenSearchSpec defines the desired state of OpenSearch  </p> Field Description <code>ServiceCommonSpec</code> ServiceCommonSpec (Members of <code>ServiceCommonSpec</code>are embedded into this type.) <code>disk_space</code> string The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service re-balancing. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>userConfig</code> github.com/aiven/aiven-operator/api/v1alpha1/userconfigs/opensearch.OpensearchUserConfig OpenSearch specific user configuration options"},{"location":"api-reference.html#postgresql","title":"PostgreSQL","text":"<p>PostgreSQL is the Schema for the postgresql API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> PostgreSQLSpec N/A <code>status</code> ServiceStatus N/A"},{"location":"api-reference.html#postgresqlspec","title":"PostgreSQLSpec","text":"<p>PostgreSQLSpec defines the desired state of postgres instance  </p> Field Description <code>ServiceCommonSpec</code> ServiceCommonSpec (Members of <code>ServiceCommonSpec</code>are embedded into this type.) <code>disk_space</code> string The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service re-balancing. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>userConfig</code> github.com/aiven/aiven-operator/api/v1alpha1/userconfigs/pg.PgUserConfig PostgreSQL specific user configuration options"},{"location":"api-reference.html#project","title":"Project","text":"<p>Project is the Schema for the projects API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> ProjectSpec N/A <code>status</code> ProjectStatus N/A"},{"location":"api-reference.html#projectspec","title":"ProjectSpec","text":"<p>ProjectSpec defines the desired state of Project  </p> Field Description <code>cardId</code> string Credit card ID; The ID may be either last 4 digits of the card or the actual ID <code>accountId</code> string Account ID <code>billingAddress</code> string Billing name and address of the project <code>billingEmails</code> []string Billing contact emails of the project <code>billingCurrency</code> string Billing currency <code>billingExtraText</code> string Extra text to be included in all project invoices, e.g. purchase order or cost center number <code>billingGroupId</code> string BillingGroup ID <code>countryCode</code> string Billing country code of the project <code>cloud</code> string Target cloud, example: aws-eu-central-1 <code>copyFromProject</code> string Project name from which to copy settings to the new project <code>technicalEmails</code> []string Technical contact emails of the project <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>tags</code> map[string]string Tags are key-value pairs that allow you to categorize projects <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret"},{"location":"api-reference.html#projectstatus","title":"ProjectStatus","text":"<p>ProjectStatus defines the observed state of Project  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an Project state <code>vatId</code> string EU VAT Identification Number <code>availableCredits</code> string Available credirs <code>country</code> string Country name <code>estimatedBalance</code> string Estimated balance <code>paymentMethod</code> string Payment method name"},{"location":"api-reference.html#projectvpc","title":"ProjectVPC","text":"<p>ProjectVPC is the Schema for the projectvpcs API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> ProjectVPCSpec N/A <code>status</code> ProjectVPCStatus N/A"},{"location":"api-reference.html#projectvpcspec","title":"ProjectVPCSpec","text":"<p>ProjectVPCSpec defines the desired state of ProjectVPC  </p> Field Description <code>project</code> string The project the VPC belongs to <code>cloudName</code> string Cloud the VPC is in <code>networkCidr</code> string Network address range used by the VPC like 192.168.0.0/24 <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret"},{"location":"api-reference.html#projectvpcstatus","title":"ProjectVPCStatus","text":"<p>ProjectVPCStatus defines the observed state of ProjectVPC  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an ProjectVPC state <code>state</code> string State of VPC <code>id</code> string Project VPC id"},{"location":"api-reference.html#redis","title":"Redis","text":"<p>Redis is the Schema for the redis API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> RedisSpec N/A <code>status</code> ServiceStatus N/A"},{"location":"api-reference.html#redisspec","title":"RedisSpec","text":"<p>RedisSpec defines the desired state of Redis  </p> Field Description <code>ServiceCommonSpec</code> ServiceCommonSpec (Members of <code>ServiceCommonSpec</code>are embedded into this type.) <code>disk_space</code> string The disk space of the service, possible values depend on the service type, the cloud provider and the project. Reducing will result in the service re-balancing. <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>userConfig</code> github.com/aiven/aiven-operator/api/v1alpha1/userconfigs/redis.RedisUserConfig Redis specific user configuration options"},{"location":"api-reference.html#resourcereference","title":"ResourceReference","text":"<p>ResourceReference is a generic reference to another resource.Resource referring to another (dependency) won't start reconciliation until dependency is not ready   </p> Field Description <code>name</code> string N/A <code>namespace</code> string N/A"},{"location":"api-reference.html#resourcereferenceobject","title":"ResourceReferenceObject","text":"<p>ResourceReferenceObject is a composite \"key\" to resourceGroupVersionKind is for resource \"type\": GroupVersionKind{Group: \"aiven.io\", Version: \"v1alpha1\", Kind: \"Kafka\"} NamespacedName is for specific instance: NamespacedName{Name: \"my-kafka\", Namespace: \"default\"}   </p> Field Description <code>GroupVersionKind</code> k8s.io/apimachinery/pkg/runtime/schema.GroupVersionKind N/A <code>NamespacedName</code> k8s.io/apimachinery/pkg/types.NamespacedName N/A"},{"location":"api-reference.html#servicecommonspec","title":"ServiceCommonSpec","text":"Field Description <code>project</code> string Target project. <code>plan</code> string Subscription plan. <code>cloudName</code> string Cloud the service runs in. <code>projectVpcId</code> string Identifier of the VPC the service should be in, if any. <code>projectVPCRef</code> ResourceReference ProjectVPCRef reference to ProjectVPC resource to use its ID as ProjectVPCID automatically <code>maintenanceWindowDow</code> string Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc. <code>maintenanceWindowTime</code> string Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format. <code>terminationProtection</code> bool Prevent service from being deleted. It is recommended to have this enabled for all services. <code>tags</code> map[string]string Tags are key-value pairs that allow you to categorize services. <code>serviceIntegrations</code> []*./api/v1alpha1.ServiceIntegrationItem N/A"},{"location":"api-reference.html#serviceintegration","title":"ServiceIntegration","text":"<p>ServiceIntegration is the Schema for the serviceintegrations API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> ServiceIntegrationSpec N/A <code>status</code> ServiceIntegrationStatus N/A"},{"location":"api-reference.html#serviceintegrationdatadoguserconfig","title":"ServiceIntegrationDatadogUserConfig","text":"Field Description <code>exclude_consumer_groups</code> []string Consumer groups to exclude <code>exclude_topics</code> []string List of topics to exclude <code>include_consumer_groups</code> []string Consumer groups to include <code>include_topics</code> []string Topics to include <code>kafka_custom_metrics</code> []string List of custom metrics"},{"location":"api-reference.html#serviceintegrationitem","title":"ServiceIntegrationItem","text":"<p>ServiceIntegrationItem Service integrations to specify when creating a service. Not applied after initial service creation  </p> Field Description <code>integrationType</code> string N/A <code>sourceServiceName</code> string N/A"},{"location":"api-reference.html#serviceintegrationkafkaconnect","title":"ServiceIntegrationKafkaConnect","text":"Field Description <code>config_storage_topic</code> string The name of the topic where connector and task configuration data are stored. This must be the same for all workers with the same group_id. <code>group_id</code> string A unique string that identifies the Connect cluster group this worker belongs to. <code>offset_storage_topic</code> string The name of the topic where connector and task configuration offsets are stored. This must be the same for all workers with the same group_id. <code>status_storage_topic</code> string The name of the topic where connector and task configuration status updates are stored.This must be the same for all workers with the same group_id."},{"location":"api-reference.html#serviceintegrationkafkaconnectuserconfig","title":"ServiceIntegrationKafkaConnectUserConfig","text":"Field Description <code>kafka_connect</code> ServiceIntegrationKafkaConnect N/A"},{"location":"api-reference.html#serviceintegrationkafkalogsuserconfig","title":"ServiceIntegrationKafkaLogsUserConfig","text":"Field Description <code>kafka_topic</code> string Topic name"},{"location":"api-reference.html#serviceintegrationmetricsuserconfig","title":"ServiceIntegrationMetricsUserConfig","text":"Field Description <code>database</code> string Name of the database where to store metric datapoints. Only affects PostgreSQL destinations <code>retention_days</code> int Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days. <code>ro_username</code> string Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service. <code>username</code> string Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service."},{"location":"api-reference.html#serviceintegrationspec","title":"ServiceIntegrationSpec","text":"<p>ServiceIntegrationSpec defines the desired state of ServiceIntegration  </p> Field Description <code>project</code> string Project the integration belongs to <code>integrationType</code> string Type of the service integration <code>sourceEndpointID</code> string Source endpoint for the integration (if any) <code>sourceServiceName</code> string Source service for the integration (if any) <code>destinationEndpointId</code> string Destination endpoint for the integration (if any) <code>destinationServiceName</code> string Destination service for the integration (if any) <code>datadog</code> ServiceIntegrationDatadogUserConfig Datadog specific user configuration options <code>kafkaConnect</code> ServiceIntegrationKafkaConnectUserConfig Kafka Connect service configuration values <code>kafkaLogs</code> ServiceIntegrationKafkaLogsUserConfig Kafka logs configuration values <code>metrics</code> ServiceIntegrationMetricsUserConfig Metrics configuration values <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret"},{"location":"api-reference.html#serviceintegrationstatus","title":"ServiceIntegrationStatus","text":"<p>ServiceIntegrationStatus defines the observed state of ServiceIntegration  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an ServiceIntegration state <code>id</code> string Service integration ID"},{"location":"api-reference.html#servicestatus","title":"ServiceStatus","text":"<p>ServiceStatus defines the observed state of service  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of a service state <code>state</code> string Service state"},{"location":"api-reference.html#serviceuser","title":"ServiceUser","text":"<p>ServiceUser is the Schema for the serviceusers API  </p> Field Description <code>metadata</code> Kubernetes meta/v1.ObjectMeta Refer to the Kubernetes API documentation for the fields of the <code>metadata</code> field. <code>spec</code> ServiceUserSpec N/A <code>status</code> ServiceUserStatus N/A"},{"location":"api-reference.html#serviceuserspec","title":"ServiceUserSpec","text":"<p>ServiceUserSpec defines the desired state of ServiceUser  </p> Field Description <code>project</code> string Project to link the user to <code>serviceName</code> string Service to link the user to <code>authentication</code> string Authentication details <code>connInfoSecretTarget</code> ConnInfoSecretTarget Information regarding secret creation <code>authSecretRef</code> AuthSecretReference Authentication reference to Aiven token in a secret"},{"location":"api-reference.html#serviceuserstatus","title":"ServiceUserStatus","text":"<p>ServiceUserStatus defines the observed state of ServiceUser  </p> Field Description <code>conditions</code> []Kubernetes meta/v1.Condition Conditions represent the latest available observations of an ServiceUser state <code>type</code> string Type of the user account"},{"location":"api-reference.html#references","title":"References","text":"<p>Generated with gen-crd-api-reference-docs  on git commit <code>f7e2b8a</code>.</p>"},{"location":"authentication.html","title":"Authenticating","text":"<p>To get authenticated and authorized, set up the communication between the Aiven Operator for Kubernetes and Aiven by using a token stored in a Kubernetes secret. You can then refer to the secret name on every custom resource in the <code>authSecretRef</code> field.</p> <p>If you don't have an Aiven account yet, sign up here for a free trial. \ud83e\udd80</p> <p>1. Generate an authentication token</p> <p>Refer to our documentation article to generate your authentication token.</p> <p>2. Create the Kubernetes Secret</p> <p>The following command creates a secret named <code>aiven-token</code> with a <code>token</code> field containing the authentication token:</p> <pre><code>$ kubectl create secret generic aiven-token --from-literal=token=\"&lt;your-token-here&gt;\"\n</code></pre> <p>When managing your Aiven resources, we will be using the created Secret in the <code>authSecretRef</code> field. It will look like the example below:</p> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: PostgreSQL\nmetadata:\nname: pg-sample\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\n[ ... ]\n</code></pre> <p>Also, note that within Aiven, all resources are conceptually inside a Project. By default, a random project name is generated when you signup, but you can also create new projects.</p> <p>The Project name is required in most of the resources. It will look like the example below:</p> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: PostgreSQL\nmetadata:\nname: pg-sample\nspec:\nproject: &lt;your-project-name-here&gt;\n[ ... ]\n</code></pre>"},{"location":"troubleshooting.html","title":"Troubleshooting","text":""},{"location":"troubleshooting.html#verifying-operator-status","title":"Verifying operator status","text":"<p>Use the following checks to help you troubleshoot the Aiven Operator for Kubernetes.</p>"},{"location":"troubleshooting.html#checking-the-pods","title":"Checking the Pods","text":"<p>Verify that all the operator Pods are <code>READY</code>, and the <code>STATUS</code> is <code>Running</code>.</p> <pre><code>$ kubectl get pod -n aiven-operator-system NAME                                                            READY   STATUS    RESTARTS   AGE\naiven-operator-controller-manager-576d944499-ggttj   1/1     Running   0          12m\n</code></pre> <p>Verify that the <code>cert-manager</code> Pods are also running.</p> <pre><code>$ kubectl get pod -n cert-manager\n\nNAME                                       READY   STATUS    RESTARTS   AGE\ncert-manager-7dd5854bb4-85cpv              1/1     Running   0          76s\ncert-manager-cainjector-64c949654c-n2z8l   1/1     Running   0          77s\ncert-manager-webhook-6bdffc7c9d-47w6z      1/1     Running   0          76s\n</code></pre>"},{"location":"troubleshooting.html#visualizing-the-operator-logs","title":"Visualizing the operator logs","text":"<p>Use the following command to visualize all the logs from the operator.</p> <pre><code>$ kubectl logs -n aiven-operator-system -l control-plane=controller-manager\n</code></pre>"},{"location":"troubleshooting.html#verifing-the-operator-version","title":"Verifing the operator version","text":"<pre><code>$ kubectl get pod -n aiven-operator-system -l control-plane=controller-manager -o jsonpath=\"{.items[0].spec.containers[0].image}\"\n</code></pre>"},{"location":"troubleshooting.html#known-issues-and-limitations","title":"Known issues and limitations","text":"<p>We're always working to resolve problems that pop up in Aiven products. If your problem is listed below, we know about it and are working to fix it. If your problem isn't listed below, report it as an issue.</p>"},{"location":"troubleshooting.html#cert-manager","title":"cert-manager","text":""},{"location":"troubleshooting.html#issue","title":"Issue","text":"<p>The following event appears on the operator Pod:</p> <pre><code>MountVolume.SetUp failed for volume \"cert\" : secret \"webhook-server-cert\" not found\n</code></pre>"},{"location":"troubleshooting.html#impact","title":"Impact","text":"<p>You cannot run the operator.</p>"},{"location":"troubleshooting.html#solution","title":"Solution","text":"<p>Make sure that cert-manager is up and running.</p> <pre><code>$ kubectl get pod -n cert-manager\n\nNAME                                       READY   STATUS    RESTARTS   AGE\ncert-manager-7dd5854bb4-85cpv              1/1     Running   0          76s\ncert-manager-cainjector-64c949654c-n2z8l   1/1     Running   0          77s\ncert-manager-webhook-6bdffc7c9d-47w6z      1/1     Running   0          76s\n</code></pre>"},{"location":"contributing/index.html","title":"Contributing Guidelines","text":"<p>The Aiven Operator for Kubernetes project accepts contributions via GitHub pull requests. This document outlines the process to help get your contribution accepted.</p> <p>Please see also the Aiven Operator for Kubernetes Developer Guide.</p>"},{"location":"contributing/index.html#support-channels","title":"Support Channels","text":"<p>This project offers support through GitHub issues and can be filed here. Moreover, GitHub issues are used as the primary method for tracking anything to do with the Aiven Operator for Kubernetes project.</p>"},{"location":"contributing/index.html#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Ensure any install or build dependencies are removed before the end of the layer when doing a build.</li> <li>Increase the version numbers in any examples files and the README.md and in corresponding file in he /docs folder to    the new version that this Pull Request would represent. The versioning scheme we use is SemVer.</li> <li>You may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have    permission to do that, you may request the second reviewer to merge it for you.</li> </ol>"},{"location":"contributing/index.html#code-of-conduct","title":"Code of Conduct","text":""},{"location":"contributing/index.html#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"contributing/index.html#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a professional setting</li> </ul>"},{"location":"contributing/index.html#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"contributing/index.html#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"contributing/index.html#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at opensource@aiven.io. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"contributing/developer-guide.html","title":"Developer guide","text":""},{"location":"contributing/developer-guide.html#getting-started","title":"Getting Started","text":"<p>You must have a working Go environment and then clone the repository:</p> <pre><code>$ git clone git@github.com:aiven/aiven-operator.git\n$ cd aiven-operator\n</code></pre>"},{"location":"contributing/developer-guide.html#building","title":"Building","text":"<p>The project uses the <code>make</code> build system.</p> <p>Building the operator binary:</p> <pre><code>$ make build\n</code></pre>"},{"location":"contributing/developer-guide.html#testing","title":"Testing","text":"<p>As of now, we only support integration tests who interact directly with Aiven. To run the tests, you'll need an Aiven account and an Aiven authentication code.</p> <pre><code>$ make test-acc AIVEN_PROJECT_NAME=\"&lt;your-project-name&gt;\" AIVEN_TOKEN=\"&lt;your-token&gt;\"\n</code></pre>"},{"location":"contributing/developer-guide.html#documentation","title":"Documentation","text":"<p>The documentation is written in markdown and generated by mkdocs and mkdocs-material. </p> <p>To run the documentation live preview:</p> <pre><code>$ make serve-docs\n</code></pre> <p>And open the <code>http://localhost:1313/aiven-operator/</code> page in your web browser.</p> <p>The API Reference section is generated automatically from the source code during the documentation deployment. To generate it locally, run the following command:</p> <pre><code>$ make generate-docs\n</code></pre> <p>To build the documentation locally (outputs to <code>docs/public</code>), run:</p> <pre><code>$ make generate-docs\n</code></pre>"},{"location":"installation/helm.html","title":"Installing with Helm (recommended)","text":""},{"location":"installation/helm.html#installing","title":"Installing","text":"<p>The Aiven Operator for Kubernetes can be installed via Helm. </p> <p>First add the Aiven Helm repository:</p> <pre><code>$ helm repo add aiven https://aiven.github.io/aiven-charts &amp;&amp; helm repo update\n</code></pre>"},{"location":"installation/helm.html#installing-custom-resource-definitions","title":"Installing Custom Resource Definitions","text":"<pre><code>$ helm install aiven-operator-crds aiven/aiven-operator-crds\n</code></pre> <p>Verify the installation: <pre><code>$ kubectl api-resources --api-group=aiven.io\n\nNAME                  SHORTNAMES   APIVERSION          NAMESPACED   KIND\nconnectionpools                    aiven.io/v1alpha1   true         ConnectionPool\ndatabases                          aiven.io/v1alpha1   true         Database\n... &lt; several omitted lines &gt;\n</code></pre></p>"},{"location":"installation/helm.html#installing-the-operator","title":"Installing the Operator","text":"<pre><code>$ helm install aiven-operator aiven/aiven-operator\n</code></pre> <p>Note: Installation will fail if webhooks are enabled and the CRDs for the cert-manager are not installed.</p> <p>Verify the installation:  <pre><code>$  helm status aiven-operator\n\nNAME: aiven-operator\nLAST DEPLOYED: Fri Sep 10 15:23:26 2021\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\n</code></pre></p> <p>It is also possible to install the operator without webhooks enabled: <pre><code>$ helm install aiven-operator aiven/aiven-operator --set webhooks.enabled=false\n</code></pre></p>"},{"location":"installation/helm.html#configuration-options","title":"Configuration Options","text":"<p>Please refer to the values.yaml of the chart.</p>"},{"location":"installation/helm.html#uninstalling","title":"Uninstalling","text":"<p>Find out the name of your deployment:</p> <pre><code>$ helm list\n\nNAME                NAMESPACE   REVISION    UPDATED                                     STATUS      CHART                       APP VERSION\naiven-operator      default     1           2021-09-09 10:56:14.623700249 +0200 CEST    deployed    aiven-operator-v0.1.0       v0.1.0     aiven-operator-crds default     1           2021-09-09 10:56:05.736411868 +0200 CEST    deployed    aiven-operator-crds-v0.1.0  v0.1.0\n</code></pre> <p>Remove the CRDs:</p> <pre><code>$ helm uninstall aiven-operator-crds\n\nrelease \"aiven-operator-crds\" uninstalled\n</code></pre> <p>Remove the operator:</p> <pre><code>$ helm uninstall aiven-operator\n\nrelease \"aiven-operator\" uninstalled\n</code></pre>"},{"location":"installation/kubectl.html","title":"Installing with kubectl","text":""},{"location":"installation/kubectl.html#installing","title":"Installing","text":"<p>All Aiven Operator for Kubernetes components can be installed from one YAML file that is uploaded for every release:</p> <pre><code>$ kubectl apply -f https://github.com/aiven/aiven-operator/releases/latest/download/deployment.yaml\n</code></pre> <p>By default the Deployment is installed into the <code>aiven-operator-system</code> namespace.</p>"},{"location":"installation/kubectl.html#uninstalling","title":"Uninstalling","text":"<p>Assuming you installed version <code>vX.Y.Z</code> of the operator it can be uninstalled via</p> <pre><code>$ kubectl delete -f https://github.com/aiven/aiven-operator/releases/download/vX.Y.Z/deployment.yaml\n</code></pre>"},{"location":"installation/prerequisites.html","title":"Prerequisites","text":"<p>The Aiven Operator for Kubernetes supports all major Kubernetes distributions, both locally and in the cloud.</p> <p>Make sure you have the following:</p> <ul> <li>To use the operator, you need admin access to a Kubernetes cluster.</li> <li>For playground usage you can use kind for example.</li> <li>For productive usage Helm is recommended.</li> </ul>"},{"location":"installation/prerequisites.html#cert-manager","title":"Cert Manager","text":"<p>The Aiven Operator for Kubernetes uses <code>cert-manager</code> to configure the service reference of our webhooks.</p> <p>Please follow the installation instructions on their website.</p> <p>Note: this is not required in the Helm installation if you select to disable webhooks, but that is not recommended outside of playground use. The Aiven Operator for Kubernetes uses webhooks for setting defaults and enforcing invariants that are expected by the aiven API and will lead to errors if ignored. In the future webhooks will also be used for conversion and supporting multiple CRD versions.</p>"},{"location":"installation/uninstalling.html","title":"Uninstalling","text":"<p>Danger</p> <p>Uninstalling the Aiven Operator for Kubernetes can remove the resources created in Aiven, possibly resulting in data loss.</p> <p>Depending on your installation, please follow one of:</p> <ul> <li>Helm</li> <li>kubectl</li> </ul>"},{"location":"installation/uninstalling.html#dealing-with-expired-tokens","title":"Dealing with expired tokens","text":"<p>Aiven resources need to have an accompanying secret that contains the token that is used to authorize the manipulation of that resource. If that token expired then you will not be able to delete the custom resource and deletion will also hang until the situation is resolved. The recommended approach to deal with that situation is to patch a valid token into the secret again so that proper cleanup of aiven resources can take place.</p>"},{"location":"installation/uninstalling.html#hanging-deletions","title":"Hanging deletions","text":"<p>To protect the secrets that the operator is using from deletion, it adds the finalizer <code>finalizers.aiven.io/needed-to-delete-services</code> to the secret. This solves a race condition that happens when deleting a namespace, where there is a possibility of the secret getting deleted before the resource that uses it. When the controller is deleted it may not cleanup the finalizers from all secrets. If there is a secret with this finalizer blocking deletion of a namespace, for now please do</p> <pre><code>kubectl patch secret &lt;offending-secret&gt; -p '{\"metadata\":{\"finalizers\":null}}' --type=merge\n</code></pre> <p>to remove the finalizer.</p>"},{"location":"resources/opensearch.html","title":"OpenSearch","text":"<p>OpenSearch\u00ae is an open source search and analytics suite including search engine, NoSQL document database, and visualization interface. OpenSearch offers a distributed, full-text search engine based on Apache Lucene\u00ae with a RESTful API interface and support for JSON documents.</p> <p>Before going through this guide, make sure you have a Kubernetes cluster with the operator installed and a Kubernetes Secret with an Aiven authentication token.</p>"},{"location":"resources/opensearch.html#creating-an-opensearch-instance","title":"Creating an OpenSearch instance","text":"<ol> <li>Create a file named <code>os-sample.yaml</code>, and add the following content: </li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: OpenSearch\nmetadata:\nname: os-sample\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\n# outputs the OpenSearch connection on the `os-secret` Secret\nconnInfoSecretTarget:\nname: os-secret\n# add your Project name here\nproject: &lt;your-project-name&gt;\n# cloud provider and plan of your choice\n# you can check all of the possibilities here https://aiven.io/pricing\ncloudName: google-europe-west1\nplan: startup-4\n# general Aiven configuration\nmaintenanceWindowDow: friday\nmaintenanceWindowTime: 23:00:00\n</code></pre> <ol> <li>Create the service by applying the configuration:</li> </ol> <pre><code>$ kubectl apply -f os-sample.yaml </code></pre> <ol> <li>Review the resource you created with this command:</li> </ol> <pre><code>$ kubectl describe opensearch.aiven.io os-sample\n</code></pre> <p>The output is similar to the following:</p> <pre><code>...\nStatus:\n  Conditions:\n    Last Transition Time:  2023-01-19T14:41:43Z\n    Message:               Instance was created or update on Aiven side\n    Reason:                Created\n    Status:                True\n    Type:                  Initialized\n    Last Transition Time:  2023-01-19T14:41:43Z\n    Message:               Instance was created or update on Aiven side, status remains unknown\n    Reason:                Created\n    Status:                Unknown\n    Type:                  Running\n  State:                   REBUILDING\n...\n</code></pre> <p>The resource will be in the <code>REBUILDING</code> state for a few minutes. Once the state changes to <code>RUNNING</code>, you can access the resource.</p>"},{"location":"resources/opensearch.html#using-the-connection-secret","title":"Using the connection Secret","text":"<p>For your convenience, the operator automatically stores the OpenSearch connection information in a Secret created with the name specified on the <code>connInfoSecretTarget</code> field.</p> <p>To view the details of the Secret, use the following command:</p> <pre><code>$ kubectl describe secret os-secret </code></pre> <p>The output is similar to the following:</p> <pre><code>Name:         os-secret\nNamespace:    default\nLabels:       &lt;none&gt;\nAnnotations:  &lt;none&gt;\n\nType:  Opaque\n\nData\n====\nHOST:      61 bytes\nPASSWORD:  24 bytes\nPORT:      5 bytes\nUSER:      8 bytes\n</code></pre> <p>You can use the jq to quickly decode the Secret:</p> <pre><code>$ kubectl get secret os-secret -o json | jq '.data | map_values(@base64d)'\n</code></pre> <p>The output is similar to the following:</p> <pre><code>{\n\"HOST\": \"os-sample-your-project.aivencloud.com\",\n\"PASSWORD\": \"&lt;secret&gt;\",\n\"PORT\": \"13041\",\n\"USER\": \"avnadmin\"\n}\n</code></pre>"},{"location":"resources/opensearch.html#creating-an-opensearch-user","title":"Creating an OpenSearch user","text":"<p>You can create service users for your instance of Aiven for OpenSearch. Service users are unique to this instance and are not shared with any other services.</p> <ol> <li>Create a file named os-service-user.yaml:</li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: ServiceUser\nmetadata:\nname: os-service-user\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\nconnInfoSecretTarget:\nname: os-service-user-secret\nproject: &lt;your-project-name&gt;\nserviceName: os-sample\n</code></pre> <ol> <li>Create the user by applying the configuration:</li> </ol> <pre><code>$ kubectl apply -f os-service-user.yaml\n</code></pre> <p>The <code>ServiceUser</code> resource generates a Secret with connection information. </p> <ol> <li>View the details of the Secret using the following command:</li> </ol> <pre><code>$ kubectl get secret os-service-user-secret -o json | jq '.data | map_values(@base64d)'\n</code></pre> <p>The output is similar to the following:</p> <pre><code>{\n\"ACCESS_CERT\": \"&lt;secret&gt;\",\n\"ACCESS_KEY\": \"&lt;secret&gt;\",\n\"CA_CERT\": \"&lt;secret&gt;\",\n\"HOST\": \"os-sample-your-project.aivencloud.com\",\n\"PASSWORD\": \"&lt;secret&gt;\",\n\"PORT\": \"14609\",\n\"USERNAME\": \"os-service-user\"\n}\n</code></pre> <p>You can connect to the OpenSearch instance using these credentials and the host information from the <code>os-secret</code> Secret.</p>"},{"location":"resources/postgresql.html","title":"PostgreSQL","text":"<p>PostgreSQL is an open source, relational database. It's ideal for organisations that need a well organised tabular datastore. On top of the strict table and columns formats, PostgreSQL also offers solutions for nested datasets with the native <code>jsonb</code> format and advanced set of extensions including PostGIS, a spatial database extender for location queries. Aiven for PostgreSQL is the perfect fit for your relational data.</p> <p>With Aiven Kubernetes Operator, you can manage Aiven for PostgreSQL through the well defined Kubernetes API.</p> <p>Before going through this guide, make sure you have a Kubernetes cluster with the operator installed, and a Kubernetes Secret with an Aiven authentication token.</p>"},{"location":"resources/postgresql.html#creating-a-postgresql-instance","title":"Creating a PostgreSQL instance","text":"<ol> <li>Create a file named <code>pg-sample.yaml</code> with the following content:</li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: PostgreSQL\nmetadata:\nname: pg-sample\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\n# outputs the PostgreSQL connection on the `pg-connection` Secret\nconnInfoSecretTarget:\nname: pg-connection\n# add your Project name here\nproject: &lt;your-project-name&gt;\n# cloud provider and plan of your choice\n# you can check all of the possibilities here https://aiven.io/pricing\ncloudName: google-europe-west1\nplan: startup-4\n# general Aiven configuration\nmaintenanceWindowDow: friday\nmaintenanceWindowTime: 23:00:00\n# specific PostgreSQL configuration\nuserConfig:\npg_version: '11'\n</code></pre> <ol> <li>Create the service by applying the configuration:</li> </ol> <pre><code>$ kubectl apply -f pg-sample.yaml\n</code></pre> <ol> <li>Review the resource you created with the following command:</li> </ol> <pre><code>$ kubectl get postgresqls.aiven.io pg-sample\n\nNAME        PROJECT        REGION                PLAN        STATE\npg-sample   your-project   google-europe-west1   startup-4   RUNNING\n</code></pre> <p>The resource can stay in the <code>BUILDING</code> state for a couple of minutes. Once the state changes to <code>RUNNING</code>, you are ready to access it.</p>"},{"location":"resources/postgresql.html#using-the-connection-secret","title":"Using the connection Secret","text":"<p>For your convenience, the operator automatically stores the PostgreSQL connection information in a Secret created with the name specified on the <code>connInfoSecretTarget</code> field.</p> <pre><code>$ kubectl describe secret pg-connection Name:         pg-connection\nNamespace:    default\nAnnotations:  &lt;none&gt;\n\nType:  Opaque\n\nData\n====\nDATABASE_URI:  107 bytes\nPGDATABASE:    9 bytes\nPGHOST:        38 bytes\nPGPASSWORD:    16 bytes\nPGPORT:        5 bytes\nPGSSLMODE:     7 bytes\nPGUSER:        8 bytes\n</code></pre> <p>You can use the jq to quickly decode the Secret:</p> <pre><code>$ kubectl get secret pg-connection -o json | jq '.data | map_values(@base64d)'\n{\n\"DATABASE_URI\": \"postgres://avnadmin:&lt;secret-password&gt;@pg-sample-your-project.aivencloud.com:13039/defaultdb?sslmode=require\",\n  \"PGDATABASE\": \"defaultdb\",\n  \"PGHOST\": \"pg-sample-your-project.aivencloud.com\",\n  \"PGPASSWORD\": \"&lt;secret-password&gt;\",\n  \"PGPORT\": \"13039\",\n  \"PGSSLMODE\": \"require\",\n  \"PGUSER\": \"avnadmin\"\n}\n</code></pre>"},{"location":"resources/postgresql.html#testing-the-connection","title":"Testing the connection","text":"<p>You can verify your PostgreSQL connection from a Kubernetes workload by deploying a Pod that runs the <code>psql</code> command.</p> <ol> <li>Create a file named <code>pod-psql.yaml</code></li> </ol> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: psql-test-connection\nspec:\nrestartPolicy: Never\ncontainers:\n- image: postgres:11-alpine\nname: postgres\ncommand: [ 'psql', '$(DATABASE_URI)', '-c', 'SELECT version();' ]\n# the pg-connection Secret becomes environment variables \nenvFrom:\n- secretRef:\nname: pg-connection\n</code></pre> <p>It runs once and stops, due to the <code>restartPolicy: Never</code> flag.</p> <ol> <li>Inspect the log:</li> </ol> <pre><code>$ kubectl logs psql-test-connection\n                                           version                                           ---------------------------------------------------------------------------------------------\n PostgreSQL 11.12 on x86_64-pc-linux-gnu, compiled by gcc, a 68c5366192 p 6b9244f01a, 64-bit\n(1 row)\n</code></pre> <p>You have now connected to the PostgreSQL, and executed the <code>SELECT version();</code> query.</p>"},{"location":"resources/postgresql.html#creating-a-postgresql-database","title":"Creating a PostgreSQL database","text":"<p>The <code>Database</code> Kubernetes resource allows you to create a logical database within the PostgreSQL instance.</p> <p>Create the <code>pg-database-sample.yaml</code> file with the following content:</p> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: Database\nmetadata:\nname: pg-database-sample\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\n# the name of the previously created PostgreSQL instance\nserviceName: pg-sample\nproject: &lt;your-project-name&gt;\nlcCollate: en_US.UTF-8\nlcCtype: en_US.UTF-8\n</code></pre> <p>You can now connect to the <code>pg-database-sample</code> using the credentials stored in the <code>pg-connection</code> Secret.</p>"},{"location":"resources/postgresql.html#creating-a-postgresql-user","title":"Creating a PostgreSQL user","text":"<p>Aiven uses the concept of service user that allows you to create users for different services. You can create one for the PostgreSQL instance.</p> <ol> <li>Create a file named <code>pg-service-user.yaml</code>.</li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: ServiceUser\nmetadata:\nname: pg-service-user\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\nconnInfoSecretTarget:\nname: pg-service-user-connection\nproject: &lt;your-project-name&gt;\nserviceName: pg-sample\n</code></pre> <ol> <li>Apply the configuration with the following command.</li> </ol> <pre><code>$ kubectl apply -f pg-service-user.yaml\n</code></pre> <p>The <code>ServiceUser</code> resource generates a Secret with connection information, in this case named <code>pg-service-user-connection</code>:</p> <pre><code>$ kubectl get secret pg-service-user-connection -o json | jq '.data | map_values(@base64d)'\n{\n\"PASSWORD\": \"&lt;secret-password&gt;\",\n  \"USERNAME\": \"pg-service-user\"\n}\n</code></pre> <p>You can now connect to the PostgreSQL instance using the credentials generated above, and the host information from the <code>pg-connection</code> Secret.</p>"},{"location":"resources/postgresql.html#creating-a-postgresql-connection-pool","title":"Creating a PostgreSQL connection pool","text":"<p>Connection pooling allows you to maintain very large numbers of connections to a database while minimizing the consumption of server resources. See more information here. Aiven for PostgreSQL uses PGBouncer for connection pooling.</p> <p>You can create a connection pool with the <code>ConnectionPool</code> resource using the previously created <code>Database</code> and <code>ServiceUser</code>.</p> <p>Create a new file named <code>pg-connection-pool.yaml</code> with the following content:</p> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: ConnectionPool\nmetadata:\nname: pg-connection-pool\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\nconnInfoSecretTarget:\nname: pg-connection-pool-connection\nproject: &lt;your-project-name&gt;\nserviceName: pg-sample\ndatabaseName: pg-database-sample\nusername: pg-service-user\npoolSize: 10\npoolMode: transaction\n</code></pre> <p>The <code>ConnectionPool</code> generates a Secret with the connection info using the name from the <code>connInfoSecretTarget.Name</code> field:</p> <pre><code>$ kubectl get secret pg-connection-pool-connection -o json | jq '.data | map_values(@base64d)' {\n\"DATABASE_URI\": \"postgres://pg-service-user:&lt;secret-password&gt;@pg-sample-you-project.aivencloud.com:13040/pg-connection-pool?sslmode=require\",\n  \"PGDATABASE\": \"pg-database-sample\",\n  \"PGHOST\": \"pg-sample-your-project.aivencloud.com\",\n  \"PGPASSWORD\": \"&lt;secret-password&gt;\",\n  \"PGPORT\": \"13040\",\n  \"PGSSLMODE\": \"require\",\n  \"PGUSER\": \"pg-service-user\"\n}\n</code></pre>"},{"location":"resources/project-vpc.html","title":"Aiven Project VPC","text":"<p>Virtual Private Cloud (VPC) peering is a method of connecting separate AWS, Google Cloud or Microsoft Azure private networks to each other. It makes it possible for the virtual machines in the different VPCs to talk to each other directly without going through the public internet.</p> <p>Within the Aiven Kubernetes Operator, you can create a <code>ProjectVPC</code> on Aiven's side to connect to your cloud provider.</p> <p>Before going through this guide, make sure you have a Kubernetes cluster with the operator installed, and a Kubernetes Secret with an Aiven authentication token.</p>"},{"location":"resources/project-vpc.html#creating-an-aiven-vpc","title":"Creating an Aiven VPC","text":"<ol> <li>Create a file named <code>vpc-sample.yaml</code> with the following content:</li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: ProjectVPC\nmetadata:\nname: vpc-sample\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\nproject: &lt;your-project-name&gt;\n# creates a VPC to link an AWS account on the South Africa region\ncloudName: aws-af-south-1\n# the network range used by the VPC\nnetworkCidr: 192.168.0.0/24\n</code></pre> <ol> <li>Create the Project by applying the configuration:</li> </ol> <pre><code>$ kubectl apply -f vpc-sample.yaml\n</code></pre> <ol> <li>Review the resource you created with the following command:</li> </ol> <pre><code>$ kubectl get projects.aiven.io vpc-sample\n\nNAME         PROJECT          CLOUD            NETWORK CIDR\nvpc-sample   &lt;your-project&gt;   aws-af-south-1   192.168.0.0/24\n</code></pre>"},{"location":"resources/project-vpc.html#using-the-aiven-vpc","title":"Using the Aiven VPC","text":"<p>Follow the official VPC documentation to complete the VPC peering on your cloud of choice.</p>"},{"location":"resources/project.html","title":"Aiven Project","text":"<p>Before going through this guide, make sure you have a Kubernetes cluster with the operator installed and a Kubernetes Secret with an Aiven authentication token.</p> <p>The <code>Project</code> CRD allows you to create Aiven Projects, where your resources can be located.</p> <p>To create a fully working Aiven Project with the Aiven Operator you need a source Aiven Project already created with a working billing configuration, like a credit card.</p> <p>Create a file named <code>project-sample.yaml</code> with the following content: <pre><code>apiVersion: aiven.io/v1alpha1\nkind: Project\nmetadata:\nname: project-sample\nspec:\n# the source Project to copy the billing information from\ncopyFromProject: &lt;your-source-project&gt;\nauthSecretRef:\nname: aiven-token\nkey: token\nconnInfoSecretTarget:\nname: project-sample\n</code></pre></p> <p>Apply the resource with: <pre><code>$ kubectl apply -f project-sample.yaml\n</code></pre></p> <p>Verify the newly created Project: <pre><code>$ kubectl get projects.aiven.io project-sample\n\nNAME             AGE\nproject-sample   22s\n</code></pre></p>"},{"location":"resources/redis.html","title":"Redis","text":"<p>Aiven for Redis\u00ae* is a fully managed in-memory NoSQL database that you can deploy in the cloud of your choice to store and access data quickly and efficiently.</p> <p>Before going through this guide, make sure you have a Kubernetes cluster with the operator installed and a Kubernetes Secret with an Aiven authentication token.</p>"},{"location":"resources/redis.html#creating-a-redis-instance","title":"Creating a Redis instance","text":"<ol> <li>Create a file named <code>redis-sample.yaml</code>, and add the following content: </li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: Redis\nmetadata:\nname: redis-sample\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\n# outputs the Redis connection on the `redis-secret` Secret\nconnInfoSecretTarget:\nname: redis-secret\n# add your Project name here\nproject: &lt;your-project-name&gt;\n# cloud provider and plan of your choice\n# you can check all of the possibilities here https://aiven.io/pricing\ncloudName: google-europe-west1\nplan: startup-4\n# general Aiven configuration\nmaintenanceWindowDow: friday\nmaintenanceWindowTime: 23:00:00\n# specific Redis configuration\nuserConfig:\nredis_maxmemory_policy: \"allkeys-random\"\n</code></pre> <ol> <li>Create the service by applying the configuration:</li> </ol> <pre><code>$ kubectl apply -f redis-sample.yaml </code></pre> <ol> <li>Review the resource you created with this command:</li> </ol> <pre><code>$ kubectl describe redis.aiven.io redis-sample\n</code></pre> <p>The output is similar to the following:</p> <pre><code>...\nStatus:\n  Conditions:\n    Last Transition Time:  2023-01-19T14:48:59Z\n    Message:               Instance was created or update on Aiven side\n    Reason:                Created\n    Status:                True\n    Type:                  Initialized\n    Last Transition Time:  2023-01-19T14:48:59Z\n    Message:               Instance was created or update on Aiven side, status remains unknown\n    Reason:                Created\n    Status:                Unknown\n    Type:                  Running\n  State:                   REBUILDING\n...\n</code></pre> <p>The resource will be in the <code>REBUILDING</code> state for a few minutes. Once the state changes to <code>RUNNING</code>, you can access the resource.</p>"},{"location":"resources/redis.html#using-the-connection-secret","title":"Using the connection Secret","text":"<p>For your convenience, the operator automatically stores the Redis connection information in a Secret created with the name specified on the <code>connInfoSecretTarget</code> field.</p> <p>To view the details of the Secret, use the following command:</p> <pre><code>$ kubectl describe secret redis-secret </code></pre> <p>The output is similar to the following:</p> <pre><code>Name:         redis-secret\nNamespace:    default\nLabels:       &lt;none&gt;\nAnnotations:  &lt;none&gt;\n\nType:  Opaque\n\nData\n====\nSSL:       8 bytes\nUSER:      7 bytes\nHOST:      60 bytes\nPASSWORD:  24 bytes\nPORT:      5 bytes\n</code></pre> <p>You can use the jq to quickly decode the Secret:</p> <pre><code>$ kubectl get secret redis-secret -o json | jq '.data | map_values(@base64d)'\n</code></pre> <p>The output is similar to the following:</p> <pre><code>{\n\"HOST\": \"redis-sample-your-project.aivencloud.com\",\n  \"PASSWORD\": \"&lt;secret-password&gt;\",\n  \"PORT\": \"14610\",\n  \"SSL\": \"required\",\n  \"USER\": \"default\"\n}\n</code></pre>"},{"location":"resources/service-integrations.html","title":"Service Integrations","text":"<p>Service Integrations provide additional functionality and features by connecting different Aiven services together.</p> <p>See our Getting Started with Service Integrations guide for more information.</p> <p>Before going through this guide, make sure you have a Kubernetes cluster with the operator installed, and a Kubernetes Secret with an Aiven authentication token.</p>"},{"location":"resources/service-integrations.html#send-kafka-logs-to-a-kafka-topic","title":"Send Kafka logs to a Kafka Topic","text":"<p>This integration allows you to send Kafka service logs to a specific Kafka Topic.</p> <p>First, let's create a Kafka service and a topic.</p> <ol> <li>Create a new file named <code>kafka-sample-topic.yaml</code> with the following content:</li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: Kafka\nmetadata:\nname: kafka-sample\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\n# outputs the Kafka connection on the `kafka-connection` Secret\nconnInfoSecretTarget:\nname: kafka-auth\n# add your Project name here\nproject: &lt;your-project-name&gt;\n# cloud provider and plan of your choice\n# you can check all of the possibilities here https://aiven.io/pricing\ncloudName: google-europe-west1\nplan: startup-2\n# general Aiven configuration\nmaintenanceWindowDow: friday\nmaintenanceWindowTime: 23:00:00\n# specific Kafka configuration\nuserConfig:\nkafka_version: '2.7'\n---\napiVersion: aiven.io/v1alpha1\nkind: KafkaTopic\nmetadata:\nname: logs\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\nproject: &lt;your-project-name&gt;\nserviceName: kafka-sample\n# here we can specify how many partitions the topic should have\npartitions: 3\n# and the topic replication factor\nreplication: 2\n# we also support various topic-specific configurations\nconfig:\nflush_ms: 100\n</code></pre> <ol> <li>Create the resource on Kubernetes:</li> </ol> <pre><code>$ kubectl apply -f kafka-sample-topic.yaml </code></pre> <ol> <li>Now, create a <code>ServiceIntegration</code> resource to send the Kafka logs to the created topic. In the same file, add the    following YAML:</li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: ServiceIntegration\nmetadata:\nname: service-integration-kafka-logs\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\nproject: &lt;your-project-name&gt;\n# indicates the type of the integration\nintegrationType: kafka_logs\n# we will send the logs to the same kafka-sample instance\n# the source and destination are the same\nsourceServiceName: kafka-sample\ndestinationServiceName: kafka-sample\n# the topic name we will send to\nkafkaLogs:\nkafka_topic: logs\n</code></pre> <ol> <li>Reapply the resource on Kubernetes:</li> </ol> <pre><code>$ kubectl apply -f kafka-sample-topic.yaml </code></pre> <ol> <li>Let's check the created service integration:</li> </ol> <pre><code>$ kubectl get serviceintegrations.aiven.io service-integration-kafka-logs\n\nNAME                             PROJECT        TYPE         SOURCE SERVICE NAME   DESTINATION SERVICE NAME   SOURCE ENDPOINT ID   DESTINATION ENDPOINT ID\nservice-integration-kafka-logs   your-project   kafka_logs   kafka-sample          kafka-sample                                    </code></pre> <p>Your Kafka service logs are now being streamed to the <code>logs</code> Kafka topic.</p>"},{"location":"resources/kafka/index.html","title":"Kafka","text":"<p>Aiven for Apache Kafka is an excellent option if you need to run Apache Kafka at scale. With Aiven Kubernetes Operator you can get up and running with a suitably sized Apache Kafka service in a few minutes.</p> <p>Before going through this guide, make sure you have a Kubernetes cluster with the operator installed and a Kubernetes Secret with an Aiven authentication token.</p>"},{"location":"resources/kafka/index.html#creating-a-kafka-instance","title":"Creating a <code>Kafka</code> instance","text":"<ol> <li>Create a file named <code>kafka-sample.yaml</code>, and add the following content:</li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: Kafka\nmetadata:\nname: kafka-sample\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\n# outputs the Kafka connection on the `kafka-connection` Secret\nconnInfoSecretTarget:\nname: kafka-auth\n# add your Project name here\nproject: &lt;your-project-name&gt;\n# cloud provider and plan of your choice\n# you can check all of the possibilities here https://aiven.io/pricing\ncloudName: google-europe-west1\nplan: startup-2\n# general Aiven configuration\nmaintenanceWindowDow: friday\nmaintenanceWindowTime: 23:00:00\n# specific Kafka configuration\nuserConfig:\nkafka_version: '2.7'\n</code></pre> <ol> <li>Create the following resource on Kubernetes:</li> </ol> <pre><code>$ kubectl apply -f kafka-sample.yaml </code></pre> <ol> <li>Inspect the service created using the command below. After a couple of minutes, the <code>STATE</code> field is changed    to <code>RUNNING</code>, and is ready to be used.</li> </ol> <pre><code>$ kubectl get kafka.aiven.io kafka-sample\n\nNAME           PROJECT          REGION                PLAN        STATE\nkafka-sample   &lt;your-project&gt;   google-europe-west1   startup-2   RUNNING\n</code></pre>"},{"location":"resources/kafka/index.html#using-the-connection-secret","title":"Using the connection Secret","text":"<p>For your convenience, the operator automatically stores the Kafka connection information in a Secret created with the name specified on the <code>connInfoSecretTarget</code> field.</p> <pre><code>$ kubectl describe secret kafka-auth Name:         kafka-auth\nNamespace:    default\nAnnotations:  &lt;none&gt;\n\nType:  Opaque\n\nData\n====\nCA_CERT:      1537 bytes\nHOST:         41 bytes\nPASSWORD:     16 bytes\nPORT:         5 bytes\nUSERNAME:     8 bytes\nACCESS_CERT:  1533 bytes\nACCESS_KEY:   2484 bytes\n</code></pre> <p>You can use the jq to quickly decode the Secret:</p> <pre><code>kubectl get secret kafka-auth -o json | jq '.data | map_values(@base64d)'\n{\n\"CA_CERT\": \"&lt;secret-ca-cert&gt;\",\n  \"ACCESS_CERT\": \"&lt;secret-cert&gt;\",\n  \"ACCESS_KEY\": \"&lt;secret-access-key&gt;\",\n  \"HOST\": \"kafka-sample-your-project.aivencloud.com\",\n  \"PASSWORD\": \"&lt;secret-password&gt;\",\n  \"PORT\": \"13041\",\n  \"USERNAME\": \"avnadmin\"\n}\n</code></pre>"},{"location":"resources/kafka/index.html#testing-the-connection","title":"Testing the connection","text":"<p>You can verify your access to the Kafka cluster from a Pod using the authentication data from the <code>kafka-auth</code> Secret. kcat is used for our examples below.</p> <ol> <li>Create a file named <code>kafka-test-connection.yaml</code>, and add the following content:</li> </ol> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: kafka-test-connection\nspec:\nrestartPolicy: Never\ncontainers:\n- image: edenhill/kcat:1.7.0\nname: kcat\n# the command below will connect to the Kafka cluster\n# and output its metadata\ncommand: [\n'kcat', '-b', '$(HOST):$(PORT)',\n'-X', 'security.protocol=SSL',\n'-X', 'ssl.key.location=/kafka-auth/ACCESS_KEY',\n'-X', 'ssl.key.password=$(PASSWORD)',\n'-X', 'ssl.certificate.location=/kafka-auth/ACCESS_CERT',\n'-X', 'ssl.ca.location=/kafka-auth/CA_CERT',\n'-L'\n]\n# loading the data from the Secret as environment variables\n# useful to access the Kafka information, like hostname and port\nenvFrom:\n- secretRef:\nname: kafka-auth\nvolumeMounts:\n- name: kafka-auth\nmountPath: \"/kafka-auth\"\n# loading the data from the Secret as files in a volume\n# useful to access the Kafka certificates \nvolumes:\n- name: kafka-auth\nsecret:\nsecretName: kafka-auth\n</code></pre> <ol> <li>Apply the file.</li> </ol> <pre><code>$ kubectl apply -f kafka-test-connection.yaml\n</code></pre> <p>Once successfully applied, you have a log with the metadata information about the Kafka cluster.</p> <pre><code>$ kubectl logs kafka-test-connection Metadata for all topics (from broker -1: ssl://kafka-sample-your-project.aivencloud.com:13041/bootstrap):\n 3 brokers:\n  broker 2 at 35.205.234.70:13041\n  broker 3 at 34.77.127.70:13041 (controller)\nbroker 1 at 34.78.146.156:13041\n 0 topics:\n</code></pre>"},{"location":"resources/kafka/index.html#creating-a-kafkatopic-and-kafkaacl","title":"Creating a <code>KafkaTopic</code> and <code>KafkaACL</code>","text":"<p>To properly produce and consume content on Kafka, you need topics and ACLs. The operator supports both with the <code>KafkaTopic</code> and <code>KafkaACL</code> resources.</p> <p>Below, here is how to create a Kafka topic named <code>random-strings</code> where random string messages will be sent.</p> <ol> <li>Create a file named <code>kafka-topic-random-strings.yaml</code> with the content below:</li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: KafkaTopic\nmetadata:\nname: random-strings\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\nproject: &lt;your-project-name&gt;\nserviceName: kafka-sample\n# here we can specify how many partitions the topic should have\npartitions: 3\n# and the topic replication factor\nreplication: 2\n# we also support various topic-specific configurations\nconfig:\nflush_ms: 100\n</code></pre> <ol> <li>Create the resource on Kubernetes:</li> </ol> <pre><code>$ kubectl apply -f kafka-topic-random-strings.yaml\n</code></pre> <ol> <li>Create a user and an ACL. To use the Kafka topic, create a new user with the <code>ServiceUser</code> resource (in order to    avoid using the <code>avnadmin</code> superuser), and the <code>KafkaACL</code> to allow the user access to the topic.</li> </ol> <p>In a file named <code>kafka-acl-user-crab.yaml</code>, add the following two resources:</p> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: ServiceUser\nmetadata:\n# the name of our user \ud83e\udd80\nname: crab\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\n# the Secret name we will store the users' connection information\n# looks exactly the same as the Secret generated when creating the Kafka cluster\n# we will use this Secret to produce and consume events later!\nconnInfoSecretTarget:\nname: kafka-crab-connection\n# the Aiven project the user is related to\nproject: &lt;your-project-name&gt;\n# the name of our Kafka Service\nserviceName: kafka-sample\n---\napiVersion: aiven.io/v1alpha1\nkind: KafkaACL\nmetadata:\nname: crab\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\nproject: &lt;your-project-name&gt;\nserviceName: kafka-sample\n# the username from the ServiceUser above\nusername: crab\n# the ACL allows to produce and consume on the topic\npermission: readwrite\n# specify the topic we created before\ntopic: random-strings\n</code></pre> <p>To create the <code>crab</code> user and its permissions, execute the following command:</p> <pre><code>$ kubectl apply -f kafka-acl-user-crab.yaml\n</code></pre>"},{"location":"resources/kafka/index.html#producing-and-consuming-events","title":"Producing and consuming events","text":"<p>Using the previously created <code>KafkaTopic</code>, <code>ServiceUser</code>, <code>KafkaACL</code>, you can produce and consume events.</p> <p>You can use kcat to produce a message into Kafka, and the <code>-t random-strings</code> argument to select the desired topic, and use the content of the <code>/etc/issue</code> file as the message's body.</p> <ol> <li>Create a <code>kafka-crab-produce.yaml</code> file with the content below:</li> </ol> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: kafka-crab-produce\nspec:\nrestartPolicy: Never\ncontainers:\n- image: edenhill/kcat:1.7.0\nname: kcat\n# the command below will produce a message with the /etc/issue file content\ncommand: [\n'kcat', '-b', '$(HOST):$(PORT)',\n'-X', 'security.protocol=SSL',\n'-X', 'ssl.key.location=/crab-auth/ACCESS_KEY',\n'-X', 'ssl.key.password=$(PASSWORD)',\n'-X', 'ssl.certificate.location=/crab-auth/ACCESS_CERT',\n'-X', 'ssl.ca.location=/crab-auth/CA_CERT',\n'-P', '-t', 'random-strings', '/etc/issue',\n]\n# loading the crab user data from the Secret as environment variables\n# useful to access the Kafka information, like hostname and port\nenvFrom:\n- secretRef:\nname: kafka-crab-connection\nvolumeMounts:\n- name: crab-auth\nmountPath: \"/crab-auth\"\n# loading the crab user information from the Secret as files in a volume\n# useful to access the Kafka certificates \nvolumes:\n- name: crab-auth\nsecret:\nsecretName: kafka-crab-connection\n</code></pre> <ol> <li>Create the Pod with the following content:</li> </ol> <pre><code>$ kubectl apply -f kafka-crab-produce.yaml\n</code></pre> <p>Now your event is stored in Kafka.</p> <p>To consume a message, you can use a graphical interface called Kowl. It allows you to explore information about our Kafka cluster, such as brokers, topics, or consumer groups.</p> <ol> <li>Create a Kubernetes Pod and service to deploy and access Kowl. Create a file named <code>kafka-crab-consume.yaml</code> with the    content below:</li> </ol> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: kafka-crab-consume\nlabels:\napp: kafka-crab-consume\nspec:\ncontainers:\n- image: quay.io/cloudhut/kowl:v1.4.0\nname: kowl\n# kowl configuration values\nenv:\n- name: KAFKA_TLS_ENABLED\nvalue: 'true'\n- name: KAFKA_BROKERS\nvalue: $(HOST):$(PORT)\n- name: KAFKA_TLS_PASSPHRASE\nvalue: $(PASSWORD)\n- name: KAFKA_TLS_CAFILEPATH\nvalue: /crab-auth/CA_CERT\n- name: KAFKA_TLS_CERTFILEPATH\nvalue: /crab-auth/ACCESS_CERT\n- name: KAFKA_TLS_KEYFILEPATH\nvalue: /crab-auth/ACCESS_KEY\n# inject all connection information as environment variables\nenvFrom:\n- secretRef:\nname: kafka-crab-connection\nvolumeMounts:\n- name: crab-auth\nmountPath: /crab-auth\n# loading the crab user information from the Secret as files in a volume\n# useful to access the Kafka certificates \nvolumes:\n- name: crab-auth\nsecret:\nsecretName: kafka-crab-connection\n---\n# we will be using a simple service to access Kowl on port 8080\napiVersion: v1\nkind: Service\nmetadata:\nname: kafka-crab-consume\nspec:\nselector:\napp: kafka-crab-consume\nports:\n- port: 8080\ntargetPort: 8080\n</code></pre> <ol> <li>Create the resources with:</li> </ol> <pre><code>$ kubectl apply -f kafka-crab-consume.yaml\n</code></pre> <ol> <li>In another terminal create a port-forward tunnel to your Pod:</li> </ol> <pre><code>$ kubectl port-forward kafka-crab-consume 8080:8080\n</code></pre> <ol> <li> <p>In the browser of your choice, access the http://localhost:8080 address. You now see a page with    the <code>random-strings</code> topic listed:    </p> </li> <li> <p>Click the topic name to see the message.    </p> </li> </ol> <p>You have now consumed the message.</p>"},{"location":"resources/kafka/connect.html","title":"Kafka Connect","text":"<p>Aiven for Apache Kafka Connect is a framework and a runtime for integrating Kafka with other systems. Kafka connectors can either be a source (for pulling data from other systems into Kafka) or sink (for pushing data into other systems from Kafka).</p> <p>This section involves a few different Kubernetes CRDs: 1. A <code>KafkaService</code> service with a <code>KafkaTopic</code> 2. A <code>KafkaConnect</code> service 3. A <code>ServiceIntegration</code> to integrate the <code>Kafka</code> and <code>KafkaConnect</code> services 4. A <code>PostgreSQL</code> used as a sink to receive messages from <code>Kafka</code> 5. A <code>KafkaConnector</code> to finally connect the <code>Kafka</code> with the <code>PostgreSQL</code></p>"},{"location":"resources/kafka/connect.html#creating-the-resources","title":"Creating the resources","text":"<p>Create a file named <code>kafka-sample-connect.yaml</code> with the following content:</p> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: Kafka\nmetadata:\nname: kafka-sample-connect\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\n# outputs the Kafka connection on the `kafka-connection` Secret\nconnInfoSecretTarget:\nname: kafka-auth\n# add your Project name here\nproject: &lt;your-project-name&gt;\n# cloud provider and plan of your choice\n# you can check all of the possibilities here https://aiven.io/pricing\ncloudName: google-europe-west1\nplan: business-4\n# general Aiven configuration\nmaintenanceWindowDow: friday\nmaintenanceWindowTime: 23:00:00\n# specific Kafka configuration\nuserConfig:\nkafka_version: '2.7'\nkafka_connect: true\n---\napiVersion: aiven.io/v1alpha1\nkind: KafkaTopic\nmetadata:\nname: kafka-topic-connect\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\nproject: &lt;your-project-name&gt;\nserviceName: kafka-sample-connect\nreplication: 2\npartitions: 1\n</code></pre> <p>Next, create a file named <code>kafka-connect.yaml</code> and add the following <code>KafkaConnect</code> resource:</p> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: KafkaConnect\nmetadata:\nname: kafka-connect\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\n# add your Project name here\nproject: &lt;your-project-name&gt;\n# cloud provider and plan of your choice\n# you can check all of the possibilities here https://aiven.io/pricing\ncloudName: google-europe-west1\nplan: startup-4\n# general Aiven configuration\nmaintenanceWindowDow: friday\nmaintenanceWindowTime: 23:00:00\n</code></pre> <p>Now let's create a <code>ServiceIntegration</code>. It will use the fields <code>sourceServiceName</code> and <code>destinationServiceName</code> to integrate the previously created <code>kafka-sample-connect</code> and <code>kafka-connect</code>. Open a new file named <code>service-integration-connect.yaml</code> and add the content below:</p> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: ServiceIntegration\nmetadata:\nname: service-integration-kafka-connect\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\nproject: &lt;your-project-name&gt;\n# indicates the type of the integration\nintegrationType: kafka_connect\n# we will send messages from the `kafka-sample-connect` to `kafka-connect`\nsourceServiceName: kafka-sample-connect\ndestinationServiceName: kafka-connect\n</code></pre> <p>Let's add an Aiven for PostgreSQL service. It will be the service used as a sink, receiving messages from the <code>kafka-sample-connect</code> cluster. Create a file named <code>pg-sample-connect.yaml</code> with the content below:</p> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: PostgreSQL\nmetadata:\nname: pg-connect\nspec:\n# gets the authentication token from the `aiven-token` Secret\nauthSecretRef:\nname: aiven-token\nkey: token\n# outputs the PostgreSQL connection on the `pg-connection` Secret\nconnInfoSecretTarget:\nname: pg-connection\n# add your Project name here\nproject: &lt;your-project-name&gt;\n# cloud provider and plan of your choice\n# you can check all of the possibilities here https://aiven.io/pricing\ncloudName: google-europe-west1\nplan: startup-4\n# general Aiven configuration\nmaintenanceWindowDow: friday\nmaintenanceWindowTime: 23:00:00\n</code></pre> <p>Finally, let's add the glue of everything: a <code>KafkaConnector</code>. As described in the specification, it will send receive messages from the <code>kafka-sample-connect</code> and send them to the <code>pg-connect</code> service. Check our official documentation for more connectors.</p> <p>Create a file named <code>kafka-connector-connect.yaml</code> and with the content below:</p> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: KafkaConnector\nmetadata:\nname: kafka-connector\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\n\u200b\nproject: &lt;your-project-name&gt;\n\u200b\n# the Kafka cluster name\nserviceName: kafka-sample-connect\n\u200b\n# the connector we will be using\nconnectorClass: io.aiven.connect.jdbc.JdbcSinkConnector\nuserConfig:\nauto.create: \"true\"\n# constructs the pg-connect connection information\nconnection.url: 'jdbc:postgresql://{{ fromSecret \"pg-connection\" \"PGHOST\"}}:{{ fromSecret \"pg-connection\" \"PGPORT\" }}/{{ fromSecret \"pg-connection\" \"PGDATABASE\" }}'\nconnection.user: '{{ fromSecret \"pg-connection\" \"PGUSER\" }}'\nconnection.password: '{{ fromSecret \"pg-connection\" \"PGPASSWORD\" }}'\n# specify which topics it will watch\ntopics: kafka-topic-connect\nkey.converter: org.apache.kafka.connect.json.JsonConverter\nvalue.converter: org.apache.kafka.connect.json.JsonConverter\nvalue.converter.schemas.enable: \"true\"\n</code></pre> <p>With all the files create, let's apply the new Kubernetes resources:</p> <pre><code>$ kubectl apply \\\n-f kafka-sample-connect.yaml \\\n-f kafka-connect.yaml \\\n-f service-integration-connect.yaml \\\n-f pg-sample-connect.yaml \\\n-f kafka-connector-connect.yaml\n</code></pre> <p>It will take some time for all the services to be up and running. You can check all of them with the command below. The deployment is finished when all services have the state <code>RUNNING</code>:</p> <pre><code>$ kubectl get \\\nkafkas.aiven.io/kafka-sample-connect \\\nkafkaconnects.aiven.io/kafka-connect \\\npostgresqls.aiven.io/pg-connect \\\nkafkaconnectors.aiven.io/kafka-connector\n\nNAME                                  PROJECT        REGION                PLAN         STATE\nkafka.aiven.io/kafka-sample-connect   your-project   google-europe-west1   business-4   RUNNING\n\nNAME                                  STATE\nkafkaconnect.aiven.io/kafka-connect   RUNNING\n\nNAME                             PROJECT        REGION                PLAN        STATE\npostgresql.aiven.io/pg-connect   your-project   google-europe-west1   startup-4   RUNNING\n\nNAME                                      SERVICE NAME           PROJECT        CONNECTOR CLASS                           STATE     TASKS TOTAL   TASKS RUNNING\nkafkaconnector.aiven.io/kafka-connector   kafka-sample-connect   your-project   io.aiven.connect.jdbc.JdbcSinkConnector   RUNNING   1             1\n</code></pre>"},{"location":"resources/kafka/connect.html#testing","title":"Testing","text":"<p>To test the connection integration, let's produce a Kafka message using kcat from within the Kubernetes cluster. We will deploy a Pod responsible for crafting a message and sending to the Kafka cluster, using the <code>kafka-auth</code> secret generate by the <code>Kafka</code> CRD.</p> <p>Create a new file named <code>kcat-connect.yaml</code> and add the content below:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: kafka-message\nspec:\ncontainers:\nrestartPolicy: Never\n- image: edenhill/kcat:1.7.0\nname: kcat\ncommand: ['/bin/sh']\nargs: [\n'-c',\n'echo {\\\"schema\\\":{\\\"type\\\":\\\"struct\\\",\\\"fields\\\":[{ \\\"field\\\": \\\"text\\\", \\\"type\\\": \\\"string\\\", \\\"optional\\\": false } ] }, \\\"payload\\\": { \\\"text\\\": \\\"Hello World\\\" } } &gt; /tmp/msg;\nkcat\n-b $(HOST):$(PORT)\n-X security.protocol=SSL\n-X ssl.key.location=/kafka-auth/ACCESS_KEY\n-X ssl.key.password=$(PASSWORD)\n-X ssl.certificate.location=/kafka-auth/ACCESS_CERT\n-X ssl.ca.location=/kafka-auth/CA_CERT\n-P -t kafka-topic-connect /tmp/msg'\n]\nenvFrom:\n- secretRef:\nname: kafka-auth\nvolumeMounts:\n- name: kafka-auth\nmountPath: \"/kafka-auth\"\nvolumes:\n- name: kafka-auth\nsecret:\nsecretName: kafka-auth\n</code></pre> <p>Apply the file with:</p> <pre><code>$ kubectl apply -f kcat-connect.yaml\n</code></pre> <p>The Pod will execute the commands and finish. You can confirm its <code>Completed</code> state with:</p> <pre><code>$ kubectl get pod kafka-message\n\nNAME            READY   STATUS      RESTARTS   AGE\nkafka-message   0/1     Completed   0          5m35s\n</code></pre> <p>If everything went smoothly, we should have our produced message in the PostgreSQL service. Let's check that out.</p> <p>Create a file named <code>psql-connect.yaml</code> with the content below:</p> <pre><code>apiVersion: v1\nkind: Pod\nmetadata:\nname: psql-connect\nspec:\nrestartPolicy: Never\ncontainers:\n- image: postgres:13\nname: postgres\n# \"kafka-topic-connect\" is the table automatically created by KafkaConnect\ncommand: ['psql', '$(DATABASE_URI)', '-c', 'SELECT * from \"kafka-topic-connect\";']\nenvFrom:\n- secretRef:\nname: pg-connection\n</code></pre> <p>Apply the file with:</p> <pre><code>$ kubectl apply -f psql-connect.yaml\n</code></pre> <p>After a couple of seconds, inspects its log with the command below. The output should be as follows:</p> <pre><code>$ kubectl logs psql-connect text     -------------\n Hello World\n(1 row)\n</code></pre>"},{"location":"resources/kafka/connect.html#clean-up","title":"Clean up","text":"<p>To clean up all the created resources, use the command below:</p> <pre><code>$ kubectl delete \\\n-f kafka-sample-connect.yaml \\\n-f kafka-connect.yaml \\\n-f service-integration-connect.yaml \\\n-f pg-sample-connect.yaml \\\n-f kafka-connector-connect.yaml \\\n-f kcat-connect.yaml \\\n-f psql-connect.yaml\n</code></pre>"},{"location":"resources/kafka/schema.html","title":"Kafka Schema","text":""},{"location":"resources/kafka/schema.html#creating-a-kafkaschema","title":"Creating a <code>KafkaSchema</code>","text":"<p>Aiven develops and maintain Karapace, an open source implementation of Kafka REST and schema registry. Is available out of the box for our managed Kafka service.</p> <p>The schema registry address and authentication is the same as the Kafka broker, the only different is the usage of the port 13044.</p> <p>First, let's create an Aiven for Apache Kafka service.</p> <ol> <li> <p>Create a file named <code>kafka-sample-schema.yaml</code> and add the content below:  <pre><code>apiVersion: aiven.io/v1alpha1\nkind: Kafka\nmetadata:\nname: kafka-sample-schema\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\nconnInfoSecretTarget:\nname: kafka-auth\nproject: &lt;your-project-name&gt;\ncloudName: google-europe-west1\nplan: startup-2\nmaintenanceWindowDow: friday\nmaintenanceWindowTime: 23:00:00\nuserConfig:\nkafka_version: '2.7'\n# this flag enables the Schema registry\nschema_registry: true\n</code></pre></p> </li> <li> <p>Apply the changes with the following command:</p> </li> </ol> <pre><code>$ kubectl apply -f kafka-schema.yaml </code></pre> <p>Now, let's create the schema itself.</p> <ol> <li>Create a new file named <code>kafka-sample-schema.yaml</code> and add the YAML content below:</li> </ol> <pre><code>apiVersion: aiven.io/v1alpha1\nkind: KafkaSchema\nmetadata:\nname: kafka-schema\nspec:\nauthSecretRef:\nname: aiven-token\nkey: token\nproject: &lt;your-project-name&gt;\nserviceName: kafka-sample-schema\n# the name of the Schema\nsubjectName: MySchema\n# the schema itself, in JSON format\nschema: |\n{\n\"type\": \"record\",\n\"name\": \"MySchema\",\n\"fields\": [\n{\n\"name\": \"field\",\n\"type\": \"string\"\n}\n]\n}\n# sets the schema compatibility level \ncompatibilityLevel: BACKWARD\n</code></pre> <ol> <li>Create the schema with the command:</li> </ol> <pre><code>$ kubectl apply -f kafka-schema.yaml\n</code></pre> <ol> <li>Review the resource you created with the following command:</li> </ol> <pre><code>$ kubectl get kafkaschemas.aiven.io kafka-schema\n\nNAME           SERVICE NAME   PROJECT          SUBJECT    COMPATIBILITY LEVEL   VERSION\nkafka-schema   kafka-sample   &lt;your-project&gt;   MySchema   BACKWARD              1\n</code></pre> <p>Now you can follow our official documentation on how to use the schema created.</p>"}]}