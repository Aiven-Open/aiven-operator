//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright (c) 2024 Aiven, Helsinki, Finland. https://aiven.io/

// Code generated by controller-gen. DO NOT EDIT.

package datadoguserconfig

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatadogTags) DeepCopyInto(out *DatadogTags) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatadogTags.
func (in *DatadogTags) DeepCopy() *DatadogTags {
	if in == nil {
		return nil
	}
	out := new(DatadogTags)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatadogUserConfig) DeepCopyInto(out *DatadogUserConfig) {
	*out = *in
	if in.DatadogTags != nil {
		in, out := &in.DatadogTags, &out.DatadogTags
		*out = make([]*DatadogTags, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(DatadogTags)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DisableConsumerStats != nil {
		in, out := &in.DisableConsumerStats, &out.DisableConsumerStats
		*out = new(bool)
		**out = **in
	}
	if in.KafkaConsumerCheckInstances != nil {
		in, out := &in.KafkaConsumerCheckInstances, &out.KafkaConsumerCheckInstances
		*out = new(int)
		**out = **in
	}
	if in.KafkaConsumerStatsTimeout != nil {
		in, out := &in.KafkaConsumerStatsTimeout, &out.KafkaConsumerStatsTimeout
		*out = new(int)
		**out = **in
	}
	if in.MaxPartitionContexts != nil {
		in, out := &in.MaxPartitionContexts, &out.MaxPartitionContexts
		*out = new(int)
		**out = **in
	}
	if in.Site != nil {
		in, out := &in.Site, &out.Site
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatadogUserConfig.
func (in *DatadogUserConfig) DeepCopy() *DatadogUserConfig {
	if in == nil {
		return nil
	}
	out := new(DatadogUserConfig)
	in.DeepCopyInto(out)
	return out
}
