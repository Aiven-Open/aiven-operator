// Code generated by user config generator. DO NOT EDIT.
// +kubebuilder:object:generate=true

package metricsuserconfig

// Configuration options for Telegraf MySQL input plugin
type Telegraf struct {
	// Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS
	GatherEventWaits *bool `groups:"create,update" json:"gather_event_waits,omitempty"`

	// gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME
	GatherFileEventsStats *bool `groups:"create,update" json:"gather_file_events_stats,omitempty"`

	// Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE
	GatherIndexIoWaits *bool `groups:"create,update" json:"gather_index_io_waits,omitempty"`

	// Gather auto_increment columns and max values from information schema
	GatherInfoSchemaAutoInc *bool `groups:"create,update" json:"gather_info_schema_auto_inc,omitempty"`

	// Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS
	GatherInnodbMetrics *bool `groups:"create,update" json:"gather_innodb_metrics,omitempty"`

	// Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST
	GatherPerfEventsStatements *bool `groups:"create,update" json:"gather_perf_events_statements,omitempty"`

	// Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST
	GatherProcessList *bool `groups:"create,update" json:"gather_process_list,omitempty"`

	// Gather metrics from SHOW SLAVE STATUS command output
	GatherSlaveStatus *bool `groups:"create,update" json:"gather_slave_status,omitempty"`

	// Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE
	GatherTableIoWaits *bool `groups:"create,update" json:"gather_table_io_waits,omitempty"`

	// Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS
	GatherTableLockWaits *bool `groups:"create,update" json:"gather_table_lock_waits,omitempty"`

	// Gather metrics from INFORMATION_SCHEMA.TABLES
	GatherTableSchema *bool `groups:"create,update" json:"gather_table_schema,omitempty"`

	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=2048
	// Truncates digest text from perf_events_statements into this many characters
	PerfEventsStatementsDigestTextLimit *int `groups:"create,update" json:"perf_events_statements_digest_text_limit,omitempty"`

	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=4000
	// Limits metrics from perf_events_statements
	PerfEventsStatementsLimit *int `groups:"create,update" json:"perf_events_statements_limit,omitempty"`

	// +kubebuilder:validation:Minimum=1
	// +kubebuilder:validation:Maximum=2592000
	// Only include perf_events_statements whose last seen is less than this many seconds
	PerfEventsStatementsTimeLimit *int `groups:"create,update" json:"perf_events_statements_time_limit,omitempty"`
}

// Configuration options for metrics where source service is MySQL
type SourceMysql struct {
	// Configuration options for Telegraf MySQL input plugin
	Telegraf *Telegraf `groups:"create,update" json:"telegraf,omitempty"`
}

// Integration user config
type MetricsUserConfig struct {
	// +kubebuilder:validation:MaxLength=40
	// +kubebuilder:validation:Pattern=`^[_A-Za-z0-9][-_A-Za-z0-9]{0,39}$`
	// Name of the database where to store metric datapoints. Only affects PostgreSQL destinations. Defaults to 'metrics'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.
	Database *string `groups:"create,update" json:"database,omitempty"`

	// +kubebuilder:validation:Minimum=0
	// +kubebuilder:validation:Maximum=10000
	// Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days.
	RetentionDays *int `groups:"create,update" json:"retention_days,omitempty"`

	// +kubebuilder:validation:MaxLength=40
	// +kubebuilder:validation:Pattern=`^[_A-Za-z0-9][-._A-Za-z0-9]{0,39}$`
	// Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.
	RoUsername *string `groups:"create,update" json:"ro_username,omitempty"`

	// Configuration options for metrics where source service is MySQL
	SourceMysql *SourceMysql `groups:"create,update" json:"source_mysql,omitempty"`

	// +kubebuilder:validation:MaxLength=40
	// +kubebuilder:validation:Pattern=`^[_A-Za-z0-9][-._A-Za-z0-9]{0,39}$`
	// Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.
	Username *string `groups:"create,update" json:"username,omitempty"`
}
